buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:1.5.0'
		classpath 'com.google.gms:google-services:1.5.0-beta2'
	}
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

repositories {
	mavenCentral()
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

def isCi = "true".equals(System.getenv("CI"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
	compileSdkVersion 23
	buildToolsVersion '23.0.2'

	dexOptions {
		// not supported with --multi-dex
		// incremental true
		// Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
		preDexLibraries = preDexEnabled && !isCi
	}

	defaultConfig {
		applicationId 'me.lazerka.mf.android'
		minSdkVersion 21
		targetSdkVersion 23
		versionCode 1
		versionName 'first'
		multiDexEnabled true

		buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
		buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

		// testInstrumentationRunner "me.lazerka.mf.android.TestRunner"
	}
	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE.txt'
		exclude 'LICENSE.txt'
	}
	sourceSets {
		main {
			manifest.srcFile 'src/main/AndroidManifest.xml'
		}
		debug {
			manifest.srcFile 'src/debug/AndroidManifest.xml'
		}
	}
	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
					'proguard-project.pro',
					'proguard-acra.pro',
					'proguard-jackson.pro',
					'proguard-guava.pro',
					'proguard-rx-java.pro',
					'proguard-square-okhttp.pro',
					'proguard-square-okio.pro'
		}
		debug {
			// Then we'd need to get additional OAuth keys, AndroidManifest etc.
			// applicationIdSuffix '.debug'
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'),
					'proguard-project.pro',
					'proguard-acra.pro',
					'proguard-jackson.pro',
					'proguard-guava.pro',
					'proguard-rx-java.pro',
					'proguard-square-okhttp.pro',
					'proguard-square-okio.pro'
		}

	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}
	productFlavors {
		remote {
			buildConfigField 'String', 'BACKEND_ROOT', '"https://lazerka-mf.appspot.com"'
		}
		local {
			buildConfigField 'String', 'BACKEND_ROOT', '"http://192.168.1.70:8380"'
		}
		emulator {
			buildConfigField 'String', 'BACKEND_ROOT', '"http://10.0.2.2:8380"'
		}
	}
	lintOptions {
		textReport true
		textOutput 'stdout'
		fatal 'UnusedResources'
		warning 'ResourceType'
	}
}

dependencies {
	compile project(':api')
//	compile 'com.google.android.gms:play-services:8.3.0'
	compile 'com.google.android.gms:play-services-auth:8.3.0'
//	compile 'com.google.android.gms:play-services-base:8.3.0'
	compile 'com.google.android.gms:play-services-gcm:8.3.0'
	compile 'com.google.android.gms:play-services-location:8.3.0'
	compile 'com.google.android.gms:play-services-maps:8.3.0'
//	compile 'com.android.support:appcompat-v7:23.1.1'
	compile 'com.android.support:recyclerview-v7:23.1.1'
	compile 'com.android.support:multidex:1.0.1'

	compile 'com.squareup.okhttp:okhttp:2.6.0'

	// See ApiRequest on why we don't use Retrofit
//    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
//    compile 'com.squareup.retrofit:converter-jackson:2.0.0-beta2'
//    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'

	compile('ch.acra:acra:4.7.0') {
		exclude group: 'com.google.android'
	}
	compile 'io.reactivex:rxandroid:1.0.1'
	compile 'io.reactivex:rxjava:1.0.16'
	compile 'org.slf4j:slf4j-android:1.7.13'

	testCompile ('org.testng:testng:6.9.9') {
		exclude group: 'com.google.guava'
	}
	testCompile 'org.hamcrest:hamcrest-all:1.3'
	testCompile 'org.mockito:mockito-all:1.10.19'

	androidTestCompile(
			'org.hamcrest:hamcrest-core:1.3',
			'org.hamcrest:hamcrest-integration:1.3',
	)

	//compile project(path: ':backend', configuration: 'android-endpoints')
}
