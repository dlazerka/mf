buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.19'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'appengine'

repositories {
    mavenCentral()
}

dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':api')

    appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.20'
    compile 'com.google.appengine:appengine-api-1.0-sdk:1.9.20'

    compile 'javax.servlet:servlet-api:2.5'

    compile ('com.googlecode.objectify:objectify:5.1.5') {
        exclude module: 'appengine-api-labs' // By artifact name.
        exclude module: 'guava' // By artifact name.

    }

    compile 'com.sun.jersey:jersey-server:1.19'
    compile 'com.sun.jersey.contribs:jersey-guice:1.19'
    compile ('com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.4') {
        exclude module: 'jackson-annotations' // By artifact name.
    }

    compile 'com.google.inject:guice:4.0-beta5'
    compile 'com.google.inject.extensions:guice-servlet:4.0-beta5'
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'org.slf4j:slf4j-jdk14:1.7.10' // Redirect to JUL.

//    testCompile 'junit:junit:4.12'
    testCompile 'org.testng:testng:6.8.21'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'com.google.appengine:appengine-api-stubs:1.9.20'
    testCompile 'com.google.appengine:appengine-testing:1.9.20'
    testCompile 'com.google.appengine:appengine-tools-sdk:1.9.20'
}

appengine {
    downloadSdk = true
    appcfg {
        oauth2 = true
    }

    // So that it's accessible from both localhost, LAN (192.168.*.*), and emulator (10.0.2.2).
    httpAddress = '0.0.0.0'
    httpPort = 8380
    disableUpdateCheck = true

    //endpoints {
    //    getClientLibsOnBuild = true
    //    getDiscoveryDocsOnBuild = true
    //}
}

test {
    useTestNG()
}

// Android Studio doesn't copy test resources when running tests from IDE.
// Invoke this task at test "Before launch" actions.
task copyTestResources(type: Copy) {
    from sourceSets.test.resources
    into sourceSets.test.output.classesDir
}
